#spring.application.name=responder_service
#server.port=8082
#
#spring.datasource.url=jdbc:mysql://localhost:3306/responderservice
#spring.datasource.username=root
#spring.datasource.password= Satyam@12345
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=responder-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#
#
#spring.kafka.consumer.properties.spring.json.use.type.headers=false
#
#logging.level.org.apache.kafka=DEBUG
#logging.level.org.springframework.kafka=DEBUG

spring.application.name=responder_service
server.port=8082

spring.datasource.url=jdbc:mysql://localhost:3306/responderservice
spring.datasource.username=root
spring.datasource.password= Satyam@12345

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=responder-group

# Use ErrorHandlingDeserializer to handle deserialization errors gracefully
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate deserializers
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# JsonDeserializer configuration
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.satyam.responder_service.kafka.Alert

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.properties.spring.json.add.type.headers=false

eureka.client.service-url.defaultZone=http://localhost:8761/eureka